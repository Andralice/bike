<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.start.bike.mapper.ProductMapper">

    <!-- Result Map for Product -->
    <resultMap id="ProductResultMap" type="com.start.bike.entity.Product">
        <id property="productId" column="product_id"/>
        <result property="productName" column="product_name"/>
        <result property="category" column="category"/>
        <result property="supplierId" column="supplier_id"/>
        <result property="minStock" column="min_stock"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <!-- Select Product by Primary Key -->
    <select id="selectProduct" parameterType="com.start.bike.entity.Product" resultMap="ProductResultMap">
        SELECT
            product_id,
            product_name,
            category,
            supplier_id,
            min_stock,
            create_time,
            update_time
        FROM
            product
        WHERE
            product_id = #{product.productId}
    </select>

    <!-- Insert Product -->
    <insert id="insertProduct" parameterType="com.start.bike.entity.Product">
        INSERT INTO product (
            product_name,
            category,
            supplier_id,
            min_stock,
            create_time,
            update_time
        ) VALUES (
                     #{product.productName},
                     #{product.category},
                     #{product.supplierId},
                     #{product.minStock},
                     #{product.createTime},
                     #{product.updateTime}
                 )
    </insert>

    <!-- Update Product -->
    <update id="updateProduct" parameterType="com.start.bike.entity.Product">
        UPDATE product
        SET
            product_name = #{product.productName},
            category = #{product.category},
            supplier_id = #{product.supplierId},
            min_stock = #{product.minStock},
            update_time = #{product.updateTime}
        WHERE
            product_id = #{product.productId}
    </update>

    <!-- Delete Product -->
    <delete id="deleteProduct" parameterType="com.start.bike.entity.Product">
        DELETE FROM product
        WHERE product_id = #{product.productId}
    </delete>

</mapper>